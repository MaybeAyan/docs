(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{627:function(s,t,a){"use strict";a.r(t);var n=a(8),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"面对对象编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面对对象编程"}},[s._v("#")]),s._v(" 面对对象编程")]),s._v(" "),a("p",[s._v("每一个对象都是功能中心，具有明确分工")]),s._v(" "),a("p",[s._v("面向对象编程具有灵活，代码可复用，易于维护和开发的优点，更适合多人合作的大型软件项目")]),s._v(" "),a("p",[s._v("面对对象的特性："),a("strong",[s._v("封装性、继承性、多态性")])]),s._v(" "),a("h4",{attrs:{id:"面向过程和面向对象的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向过程和面向对象的对比"}},[s._v("#")]),s._v(" 面向过程和面向对象的对比")]),s._v(" "),a("h5",{attrs:{id:"面向过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向过程"}},[s._v("#")]),s._v(" 面向过程")]),s._v(" "),a("p",[s._v("优点：性能比对象高，适合和硬件联系很紧密的东西，单片机")]),s._v(" "),a("p",[s._v("缺点：没有面向对象那么容易维护，复用及扩展")]),s._v(" "),a("h5",{attrs:{id:"面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[s._v("#")]),s._v(" 面向对象")]),s._v(" "),a("p",[s._v("优点：易于维护、复用、拓展、由于面向对象有封装、继承、多态性的特征、可以设计出低耦合的系统，使得系统更灵活且易于维护")]),s._v(" "),a("p",[s._v("缺点：性能比面对过程低")]),s._v(" "),a("h4",{attrs:{id:"面向对象的思维特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的思维特点"}},[s._v("#")]),s._v(" 面向对象的思维特点")]),s._v(" "),a("p",[s._v("1、抽取（抽象）对象共用的属性和行为组织（封装）成一个类（模板）")]),s._v(" "),a("p",[s._v("2、对类进行实例化，获取类的对象")]),s._v(" "),a("h4",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[s._v("#")]),s._v(" 对象")]),s._v(" "),a("p",[s._v("对象是具体的事物，无序的相关属性和方法的集合")]),s._v(" "),a("p",[s._v("由属性和方法构成：")]),s._v(" "),a("p",[s._v("属性：事物的特征，在对象中用属性来表示（常用名词）")]),s._v(" "),a("p",[s._v("方法：事物的行为，在对象中用方法来表示（常用动词）")]),s._v(" "),a("h4",{attrs:{id:"类-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类-class"}},[s._v("#")]),s._v(" 类 class")]),s._v(" "),a("p",[s._v("类抽象了对象的公共部分，泛指某一大类")]),s._v(" "),a("p",[s._v("而对象是类通过实例化产生的")]),s._v(" "),a("h4",{attrs:{id:"创建类-class-xxx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建类-class-xxx"}},[s._v("#")]),s._v(" 创建类 class xxx {}")]),s._v(" "),a("p",[s._v("通过关键字创建类，类名习惯性定义首字母大小")]),s._v(" "),a("p",[s._v("生成实例 new 不能省略")]),s._v(" "),a("p",[s._v("构造函数不需要加 function")]),s._v(" "),a("h5",{attrs:{id:"类的共用属性放在-constructor-里面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的共用属性放在-constructor-里面"}},[s._v("#")]),s._v(" 类的共用属性放在 constructor 里面")]),s._v(" "),a("p",[a("code",[s._v("constructor(){}")])]),s._v(" "),a("h5",{attrs:{id:"类添加方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类添加方法"}},[s._v("#")]),s._v(" 类添加方法")]),s._v(" "),a("p",[s._v("1、类里面所有的函数不需要写 function")]),s._v(" "),a("p",[s._v("2、多个函数方法之间禁止添加逗号分隔")]),s._v(" "),a("h4",{attrs:{id:"类的继承-extends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的继承-extends"}},[s._v("#")]),s._v(" 类的继承 extends")]),s._v(" "),a("p",[a("code",[s._v("class Father {constructor (x,y) {this.x = x;this.y = y;}")])]),s._v(" "),a("p",[a("code",[s._v("sum (x, y) {console(this.x + this.y);}")])]),s._v(" "),a("p",[a("code",[s._v("}")])]),s._v(" "),a("p",[a("code",[s._v("class Son extends Father {constructor (x , y) { super(x, y) }")])]),s._v(" "),a("p",[a("code",[s._v("}")])]),s._v(" "),a("p",[a("code",[s._v("var son = new Son(1, 2);")])]),s._v(" "),a("p",[a("code",[s._v("son.sum();")])]),s._v(" "),a("h5",{attrs:{id:"调用父类中的构造函数用-super-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用父类中的构造函数用-super-关键字"}},[s._v("#")]),s._v(" 调用父类中的构造函数用 super 关键字")]),s._v(" "),a("p",[s._v("super 必须在子类 this 之前调用")]),s._v(" "),a("h5",{attrs:{id:"子类调用父类普通函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子类调用父类普通函数"}},[s._v("#")]),s._v(" 子类调用父类普通函数")]),s._v(" "),a("p",[s._v("继承中如果实例化子类输出一个方法，先看子类有没有这个方法，如果有就执行子类的；")]),s._v(" "),a("p",[s._v("如果子类没有，就去查找父类有没有这个方法，如果有就执行父类的方法。")]),s._v(" "),a("h3",{attrs:{id:"es6-中类和对象的使用注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-中类和对象的使用注意点"}},[s._v("#")]),s._v(" ES6 中类和对象的使用注意点")]),s._v(" "),a("p",[s._v("1、在 ES6 中类没有变量提升，所以必须先定义类，才能通过类实例化对象")]),s._v(" "),a("p",[s._v("2、类里面的共用的属性和方法一定要加 this 使用")]),s._v(" "),a("p",[s._v("3、注意类里面的 this 指向问题")]),s._v(" "),a("p",[s._v("constructor 里的 this 指向创建的实例对象")]),s._v(" "),a("p",[s._v("方法里的 this 指向方法的调用者")]),s._v(" "),a("h1",{attrs:{id:"构造函数和原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数和原型"}},[s._v("#")]),s._v(" 构造函数和原型")]),s._v(" "),a("p",[s._v("ES6 全称是 ECMAScript 6.0")]),s._v(" "),a("p",[s._v("在 ES6 之前，对象不是基于类创建的，而是用一种称为构建函数的特殊函数来定义对象和他们的特征的。")]),s._v(" "),a("h4",{attrs:{id:"创建对象的三种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建对象的三种方式"}},[s._v("#")]),s._v(" 创建对象的三种方式")]),s._v(" "),a("p",[s._v("1、利用 new Object（）创建对象")]),s._v(" "),a("p",[s._v("2、利用对象字面量创建对象")]),s._v(" "),a("p",[s._v("3、利用构造函数创建对象")]),s._v(" "),a("h4",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[s._v("#")]),s._v(" 构造函数")]),s._v(" "),a("p",[s._v("构造函数是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，他总与 new 一起使用，我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面。")]),s._v(" "),a("h5",{attrs:{id:"new-在执行时会做的四件事情"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-在执行时会做的四件事情"}},[s._v("#")]),s._v(" new 在执行时会做的四件事情")]),s._v(" "),a("p",[s._v("1、在内存中创建一个新的空对象")]),s._v(" "),a("p",[s._v("2、让 this 指向这个新的对象")]),s._v(" "),a("p",[s._v("3、执行构造函数里面的代码，给这个新对象添加属性和方法")]),s._v(" "),a("p",[s._v("4、返回这个新对象（所以构造函数里面不需要 return）")]),s._v(" "),a("h5",{attrs:{id:"实例成员是构造函数内部通过-this-添加的成员"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例成员是构造函数内部通过-this-添加的成员"}},[s._v("#")]),s._v(" 实例成员是构造函数内部通过 this 添加的成员")]),s._v(" "),a("p",[s._v("实例成员只能通过实例化的对象进行访问")]),s._v(" "),a("p",[s._v("构造函数本身无法访问实例成员")]),s._v(" "),a("h5",{attrs:{id:"静态成员-是构造函数本身添加的成员"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态成员-是构造函数本身添加的成员"}},[s._v("#")]),s._v(" 静态成员 是构造函数本身添加的成员")]),s._v(" "),a("p",[s._v("静态成员只能通过构造函数来访问，不能通过对象来访问")]),s._v(" "),a("h4",{attrs:{id:"构造函数存在的问题-浪费内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数存在的问题-浪费内存"}},[s._v("#")]),s._v(" 构造函数存在的问题：浪费内存")]),s._v(" "),a("h4",{attrs:{id:"构造函数原型-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数原型-prototype"}},[s._v("#")]),s._v(" 构造函数原型 prototype")]),s._v(" "),a("p",[s._v("构造函数通过原型分配的函数是所有对象所共享的")]),s._v(" "),a("p",[s._v("JS 规定，每一个构造函数里面都有一个 prototype 属性，指向另一个对象")]),s._v(" "),a("p",[s._v("prototype 本身就是一个对象，这个对象的所有属性和方法，都会被构造函数所拥有")]),s._v(" "),a("p",[s._v("我们可以把那些不变的方法，直接定义在 prototype 对象上，这样所有对象的实例就可以共享这些方法")]),s._v(" "),a("h5",{attrs:{id:"一般情况下-我们公共的属性定义到构造函数里面-公共的方法我们放到原型对象身上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般情况下-我们公共的属性定义到构造函数里面-公共的方法我们放到原型对象身上"}},[s._v("#")]),s._v(" 一般情况下，我们公共的属性定义到构造函数里面，公共的方法我们放到原型对象身上")]),s._v(" "),a("p",[s._v("属性——定义到构造函数")]),s._v(" "),a("p",[s._v("方法——定义到原型对象")]),s._v(" "),a("h4",{attrs:{id:"对象原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象原型"}},[s._v("#")]),s._v(" 对象原型")]),s._v(" "),a("p",[s._v("每个对象都有一个原型属性 "),a("code",[s._v("__proto__")])]),s._v(" "),a("p",[s._v("指向构造函数的原型对象")]),s._v(" "),a("p",[s._v("方法查找规则：1、首先查看对象上是否有想要的方法，如果有就执行这个对象上的方法")]),s._v(" "),a("p",[s._v("​ 2、 如果没有想要的方法，因为有"),a("code",[s._v("__proto__")]),s._v("的存在，就去构造函数原型对象 prototype 上查找")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211029141213938.png",alt:"image-20211029141213938"}})]),s._v(" "),a("p",[a("code",[s._v("__proto__")]),s._v(" 对象原型和原型对象 "),a("code",[s._v("prototype")]),s._v(" 是等价的")]),s._v(" "),a("p",[a("code",[s._v("__proto__")]),s._v(" 对象原型的意义就在于为对象的查找机制提供一个方向，或者说是一条路线，但是他是一个非标准属性，因此在实际开发中，不可以调用这个属性，他只是内部指向原型对象 prototype")]),s._v(" "),a("h4",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[s._v("#")]),s._v(" constructor")]),s._v(" "),a("p",[s._v("对象原型 "),a("code",[s._v("__proto__")]),s._v(" 和构造函数原型对象 prototype 里面都有一个 constructor 属性，我们称为构造函数，因为他指回构造函数本身。")]),s._v(" "),a("p",[s._v("constructor 主要用于记录该对象引用于哪个构造函数，他可以让原型对象重新指向原来的构造函数")]),s._v(" "),a("p",[s._v("很多情况下，我们需要手动的利用 constructor 这个属性指回原来的构造函数")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211029142925143.png",alt:"image-20211029142925143"}})]),s._v(" "),a("h3",{attrs:{id:"原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[s._v("#")]),s._v(" 原型链")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211029143319765.png",alt:"image-20211029143319765"}})]),s._v(" "),a("h3",{attrs:{id:"javascript-成员查找机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-成员查找机制"}},[s._v("#")]),s._v(" JavaScript 成员查找机制")]),s._v(" "),a("p",[s._v("1、当访问一个对象的属性或者方法时，首先查找这个对象自身有没有该属性或方法")]),s._v(" "),a("p",[s._v("2、如果没有就查找它的原型，proto 指向的 prototype 原型对象")]),s._v(" "),a("p",[s._v("3、如果还没有就查找原型对象的原型")]),s._v(" "),a("p",[s._v("4、以此类推一直找到 Object 为止")]),s._v(" "),a("p",[s._v("5、proto 对象原型的意义在于为对象成员查找机制提供一个方向，或者说是路线")]),s._v(" "),a("h3",{attrs:{id:"面向对象-this-的指向问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象-this-的指向问题"}},[s._v("#")]),s._v(" 面向对象 This 的指向问题")]),s._v(" "),a("h5",{attrs:{id:"_1、在构造函数中-里面的-this-指向的是对象实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、在构造函数中-里面的-this-指向的是对象实例"}},[s._v("#")]),s._v(" 1、在构造函数中，里面的 this 指向的是对象实例")]),s._v(" "),a("h5",{attrs:{id:"_2、在原型对象函数里面的-this-指向的也是对象实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、在原型对象函数里面的-this-指向的也是对象实例"}},[s._v("#")]),s._v(" 2、在原型对象函数里面的 this 指向的也是对象实例")]),s._v(" "),a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[s._v("#")]),s._v(" 继承")]),s._v(" "),a("p",[s._v("在 es 之前并没有给我们提供 extends 继承，我们通过构造函数和原型对象模拟实现继承，称为"),a("strong",[s._v("组合继承")])]),s._v(" "),a("h5",{attrs:{id:"call"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call"}},[s._v("#")]),s._v(" call（）；")]),s._v(" "),a("p",[s._v("调用函数和改变 this 的指向")]),s._v(" "),a("h5",{attrs:{id:"借用父构造函数来继承属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#借用父构造函数来继承属性"}},[s._v("#")]),s._v(" 借用父构造函数来继承属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Father (uname,age){\n\n​      // this指向父构造函数的对象实例\n\n​      this.uname = uname;\n\n​      this.age = age;\n\n​    }\n\n​    function Son(uname,age){\n\n​      // this指向子构造函数的对象实例\n\n​      Father.call(this,uname,age);\n\n\t}\n\n​    var son = new Son('为什么',18,120);\n\n​    console.log(son);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h5",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),a("h5",{attrs:{id:"借用直接赋值原型的方式会有问题-修改了子原型对象-父原型对象也会跟着一起改变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#借用直接赋值原型的方式会有问题-修改了子原型对象-父原型对象也会跟着一起改变"}},[s._v("#")]),s._v(" 借用直接赋值原型的方式会有问题，修改了子原型对象，父原型对象也会跟着一起改变")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    function Father (uname,age){\n            // this指向父构造函数的对象实例\n            this.uname = uname;\n            this.age = age;\n        }\n\n        Father.prototype.money = function () {\n            console.log(100000);\n        };\n\n        function Son(uname,age,score){\n            // this指向子构造函数的对象实例\n            Father.call(this,uname,age);\n            this.score = score;\n        }\n        // Son.prototype = Father.prototype;\n        Son.prototype = new Father();\n        Son.prototype.constructor = Son;\n        // 利用对象的形式修改了对象原型，要用constructor指回原来的构造函数\n        var son = new Son('为什么',18,120);\n        console.log(son);\n        console.log(Father.prototype);\n        console.log(Son.prototype.constructor);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h3",{attrs:{id:"es6-通过-类-实现面向对象编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-通过-类-实现面向对象编程"}},[s._v("#")]),s._v(" ES6 通过 类 实现面向对象编程")]),s._v(" "),a("h5",{attrs:{id:"类的本质其实还是一个构造函数-是构造函数另外一种写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的本质其实还是一个构造函数-是构造函数另外一种写法"}},[s._v("#")]),s._v(" 类的本质其实还是一个构造函数，是构造函数另外一种写法")]),s._v(" "),a("p",[s._v("ES6 的类它的绝大部分功能，ES5 都可以做到，新的 class 的写法只是让对象原型的写法更加清晰，更像面向对象编程的语法")]),s._v(" "),a("h5",{attrs:{id:"语法糖-便捷的写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法糖-便捷的写法"}},[s._v("#")]),s._v(" 语法糖：便捷的写法")]),s._v(" "),a("h3",{attrs:{id:"es5-中新增的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es5-中新增的方法"}},[s._v("#")]),s._v(" ES5 中新增的方法")]),s._v(" "),a("h4",{attrs:{id:"数组方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组方法"}},[s._v("#")]),s._v(" 数组方法")]),s._v(" "),a("p",[s._v("迭代遍历方法：forEach（）、map（）、filter（）、some（）、every（）")]),s._v(" "),a("p",[s._v("filter() 主要用于筛选数组，返回的是新数组")]),s._v(" "),a("p",[s._v("some() 查找数组中是否有满足条件的元素 返回布尔值")]),s._v(" "),a("h4",{attrs:{id:"字符串方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法"}},[s._v("#")]),s._v(" 字符串方法")]),s._v(" "),a("p",[a("code",[s._v("str.trim()")])]),s._v(" "),a("p",[s._v("去除字符串两侧的空格")]),s._v(" "),a("h4",{attrs:{id:"对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象方法"}},[s._v("#")]),s._v(" 对象方法")]),s._v(" "),a("p",[a("code",[s._v("Object.defineProperty（obj，prop，descriptor）")])]),s._v(" "),a("p",[s._v("obj：必需 目标对象")]),s._v(" "),a("p",[s._v("prop：必需 需要定义或修改的属性的名字")]),s._v(" "),a("p",[s._v("descriptor：必需 目标属性所拥有的特性")]),s._v(" "),a("p",[s._v("第三个参数以对象的格式声明 { }")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211029201601307.png",alt:"image-20211029201601307"}})]),s._v(" "),a("h3",{attrs:{id:"函数进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数进阶"}},[s._v("#")]),s._v(" 函数进阶")]),s._v(" "),a("h4",{attrs:{id:"函数的定义方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义方式"}},[s._v("#")]),s._v(" 函数的定义方式")]),s._v(" "),a("p",[s._v("function（）{}；自定义函数 命名函数")]),s._v(" "),a("p",[s._v("var fun = function（）{}；函数表达式 匿名函数")]),s._v(" "),a("p",[s._v("var f = new Function （‘参数 1’，‘参数 2’， ‘函数体’）；"),a("strong",[s._v("效率比较低")])]),s._v(" "),a("p",[s._v("所有函数都是 Function 的实例（对象）")]),s._v(" "),a("h4",{attrs:{id:"函数的调用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的调用方式"}},[s._v("#")]),s._v(" 函数的调用方式")]),s._v(" "),a("p",[s._v("1、普通函数")]),s._v(" "),a("p",[s._v("2、对象的方法")]),s._v(" "),a("p",[s._v("3、构造函数")]),s._v(" "),a("p",[s._v("4、绑定时间函数")]),s._v(" "),a("p",[s._v("5、定时器函数")]),s._v(" "),a("p",[s._v("6、立即执行函数 自动调用 (function(){})();")]),s._v(" "),a("h4",{attrs:{id:"函数内部的-this-指向问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数内部的-this-指向问题"}},[s._v("#")]),s._v(" 函数内部的 this 指向问题")]),s._v(" "),a("p",[s._v("1、普通函数 指向 window")]),s._v(" "),a("p",[s._v("2、对象的方法 指向对象")]),s._v(" "),a("p",[s._v("3、构造函数 指向实例对象 原型对象里的 this 也指向实例对象")]),s._v(" "),a("p",[s._v("4、绑定时间函数 指向获取的元素 也就是函数的调用者")]),s._v(" "),a("p",[s._v("5、定时器函数 指向 window 相当于普通函数 不需要手动调用")]),s._v(" "),a("p",[s._v("6、立即执行函数 自动调用 (function(){})(); window")]),s._v(" "),a("h4",{attrs:{id:"改变函数内部的-this-指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改变函数内部的-this-指向"}},[s._v("#")]),s._v(" 改变函数内部的 this 指向")]),s._v(" "),a("h5",{attrs:{id:"call-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-方法"}},[s._v("#")]),s._v(" call 方法")]),s._v(" "),a("p",[a("code",[s._v("call()")])]),s._v(" "),a("p",[s._v("调用函数 改变函数内的 this 指向 主要作用是可以实现继承")]),s._v(" "),a("h5",{attrs:{id:"apply-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apply-方法"}},[s._v("#")]),s._v(" apply 方法")]),s._v(" "),a("p",[a("code",[s._v("apply(thisArg,[argsArray])")])]),s._v(" "),a("p",[s._v("调用函数 改变函数内的 this 指向 它的参数必须是数组（伪数组）")]),s._v(" "),a("p",[s._v("apply 的主要应用是借助于数学内置对象求最大值")]),s._v(" "),a("h5",{attrs:{id:"bind-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bind-方法"}},[s._v("#")]),s._v(" bind 方法*")]),s._v(" "),a("p",[a("code",[s._v("bind()")])]),s._v(" "),a("p",[s._v("不调用函数 改变原来函数内部的 this 指向")]),s._v(" "),a("p",[s._v("返回的是原函数改变 this 之后产生的新函数")]),s._v(" "),a("p",[s._v("当有函数不需要立即调用，又想改变函数 this 指向时可以用 bind 方法")]),s._v(" "),a("h3",{attrs:{id:"js-严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-严格模式"}},[s._v("#")]),s._v(" JS 严格模式")]),s._v(" "),a("p",[s._v("1、消除了 JS 语法的一些不合理、不严谨之处，减少了一些怪异行为")]),s._v(" "),a("p",[s._v("2、消除代码运行的一些不安全之处，保证代码运行的安全")]),s._v(" "),a("p",[s._v("3、提高编译器效率，增加运行速度")]),s._v(" "),a("p",[s._v("4、禁用了在 ECMAScript 的未来版本中可能会定义的一些语法，为未来新版本的 JS 做好铺垫")]),s._v(" "),a("h5",{attrs:{id:"开启严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启严格模式"}},[s._v("#")]),s._v(" 开启严格模式")]),s._v(" "),a("p",[s._v("为整个脚本文件开始严格模式 "),a("code",[s._v("use strict")])]),s._v(" "),a("p",[s._v("为某个函数开启严格模式 "),a("code",[s._v("funtion fn (){ use strict }")])]),s._v(" "),a("h5",{attrs:{id:"变量规定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量规定"}},[s._v("#")]),s._v(" 变量规定")]),s._v(" "),a("p",[s._v("1、变量必须声明再使用")]),s._v(" "),a("p",[s._v("2、我们不能随意删除已经声明好的变量")]),s._v(" "),a("h5",{attrs:{id:"this-指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-指向"}},[s._v("#")]),s._v(" this 指向")]),s._v(" "),a("p",[s._v("3、全局作用域 this 指向 undefined")]),s._v(" "),a("p",[s._v("4、严格模式下，如果构造函数不加 new 调用，this 会报错")]),s._v(" "),a("p",[s._v("5、定时器 this 严格模式下仍指向 window")]),s._v(" "),a("p",[s._v("6、事件、对象的指向还是指向调用者")]),s._v(" "),a("p",[s._v("函数变化")]),s._v(" "),a("p",[s._v("7、声明变量不允许重名")]),s._v(" "),a("p",[s._v("8、函数必须声明在顶层，不能在非函数的代码块内声明函数")]),s._v(" "),a("h3",{attrs:{id:"高阶函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数"}},[s._v("#")]),s._v(" 高阶函数")]),s._v(" "),a("p",[s._v("高阶函数是对其他函数进行操作的函数，他接受函数作为参数或将函数作为返回值输出，最典型的是回调函数")]),s._v(" "),a("h3",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" 闭包")]),s._v(" "),a("h5",{attrs:{id:"变量作用域-变量根据作用域-分为全局变量和局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量作用域-变量根据作用域-分为全局变量和局部变量"}},[s._v("#")]),s._v(" 变量作用域：变量根据作用域，分为全局变量和局部变量")]),s._v(" "),a("p",[s._v("1、函数内部可以使用全局变量")]),s._v(" "),a("p",[s._v("2、函数外部不可以使用局部变量")]),s._v(" "),a("p",[s._v("3、当函数执行完毕，本作用域内的局部变量会销毁")]),s._v(" "),a("h3",{attrs:{id:"闭包-closure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包-closure"}},[s._v("#")]),s._v(" 闭包 closure")]),s._v(" "),a("p",[s._v("闭包指的是有权访问一个另一个函数作用域中变量的函数")]),s._v(" "),a("p",[s._v("闭包是一个函数，一个作用域可以访问另外一个函数的局部变量")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211031162306707.png",alt:"image-20211031162306707"}})]),s._v(" "),a("h5",{attrs:{id:"闭包的主要作用-延伸了变量的作用范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的主要作用-延伸了变量的作用范围"}},[s._v("#")]),s._v(" 闭包的主要作用：延伸了变量的作用范围")]),s._v(" "),a("h5",{attrs:{id:"闭包的缺点-容易造成内存泄漏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的缺点-容易造成内存泄漏"}},[s._v("#")]),s._v(" 闭包的缺点：容易造成内存泄漏")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211031170345692.png",alt:"image-20211031170345692"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211031170729651.png",alt:"image-20211031170729651"}})]),s._v(" "),a("h2",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[s._v("#")]),s._v(" 递归")]),s._v(" "),a("p",[s._v("如果一个函数在内部可以调用其本身，那么这个函数就是递归函数")]),s._v(" "),a("p",[s._v("递归函数的作用和循环效果一样，同时也很容易发生“栈溢出”错误，所以必须添加退出条件")]),s._v(" "),a("h5",{attrs:{id:"利用递归函数求斐波那契数列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用递归函数求斐波那契数列"}},[s._v("#")]),s._v(" 利用递归函数求斐波那契数列")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("        // 利用递归函数求斐波那契数列（兔子序列）\n        // 用户输入一个数字n 就可以求出这个数字对应的数字序列值\n        // 我们只需要知道用户输入的n 的前面两项（n-1 n-2）就可以计算出n 对应的序列值\n        function fb(n) {\n            if (n === 1 || n === 2) {\n                return 1;\n            }\n            return fb(n - 1) + fb(n - 2);\n        }\n        console.log(fb(2));\n        console.log(fb(6));\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"浅拷贝和深拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝和深拷贝"}},[s._v("#")]),s._v(" 浅拷贝和深拷贝")]),s._v(" "),a("h6",{attrs:{id:"浅拷贝只是拷贝一层-更深层次对象级别的只拷贝引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝只是拷贝一层-更深层次对象级别的只拷贝引用"}},[s._v("#")]),s._v(" 浅拷贝只是拷贝一层，更深层次对象级别的只拷贝引用")]),s._v(" "),a("h6",{attrs:{id:"深拷贝拷贝多层-每一级别的数据都会拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝拷贝多层-每一级别的数据都会拷贝"}},[s._v("#")]),s._v(" 深拷贝拷贝多层，每一级别的数据都会拷贝")]),s._v(" "),a("h6",{attrs:{id:"浅拷贝把地址拷贝走了-指向同一个地址-其中一个变化-都跟着变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝把地址拷贝走了-指向同一个地址-其中一个变化-都跟着变化"}},[s._v("#")]),s._v(" 浅拷贝把地址拷贝走了 指向同一个地址 其中一个变化 都跟着变化")]),s._v(" "),a("h5",{attrs:{id:"es6-浅拷贝语法糖-object-assign-o-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-浅拷贝语法糖-object-assign-o-obj"}},[s._v("#")]),s._v(" es6 浅拷贝语法糖：Object.assign (o, obj);")]),s._v(" "),a("h6",{attrs:{id:"深拷贝拷贝多层-拷贝后分配不同的地址储存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝拷贝多层-拷贝后分配不同的地址储存"}},[s._v("#")]),s._v(" 深拷贝拷贝多层，拷贝后分配不同的地址储存")]),s._v(" "),a("h5",{attrs:{id:"利用递归语法拷贝-判断数据类型进行递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用递归语法拷贝-判断数据类型进行递归"}},[s._v("#")]),s._v(" 利用递归语法拷贝，判断数据类型进行递归")]),s._v(" "),a("h3",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[s._v("#")]),s._v(" 正则表达式")]),s._v(" "),a("h5",{attrs:{id:"正则表达式是匹配字符串中字符组合的模式-在-js-中-正则表达式也是对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式是匹配字符串中字符组合的模式-在-js-中-正则表达式也是对象"}},[s._v("#")]),s._v(" 正则表达式是匹配字符串中字符组合的模式，在 JS 中，正则表达式也是对象")]),s._v(" "),a("h5",{attrs:{id:"通常用于检索、替换符合某个模式-规则-的文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通常用于检索、替换符合某个模式-规则-的文本"}},[s._v("#")]),s._v(" 通常用于检索、替换符合某个模式（规则）的文本")]),s._v(" "),a("h4",{attrs:{id:"创建方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建方式"}},[s._v("#")]),s._v(" 创建方式")]),s._v(" "),a("h5",{attrs:{id:"_1、利用调用-regexp-对象的构造函数创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、利用调用-regexp-对象的构造函数创建"}},[s._v("#")]),s._v(" 1、利用调用 RegExp 对象的构造函数创建")]),s._v(" "),a("p",[a("code",[s._v("var 变量名 = new RegExp ( /表达式/ );")])]),s._v(" "),a("h5",{attrs:{id:"_2、通过字面量创建正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、通过字面量创建正则表达式"}},[s._v("#")]),s._v(" 2、通过字面量创建正则表达式")]),s._v(" "),a("p",[a("code",[s._v("var rg = /123/;")])]),s._v(" "),a("h5",{attrs:{id:"_3、测试正则表达式-test-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、测试正则表达式-test-str"}},[s._v("#")]),s._v(" 3、测试正则表达式 "),a("code",[s._v("test ( str )")])]),s._v(" "),a("p",[s._v("判断文本是否符合规范，返回布尔值")]),s._v(" "),a("h5",{attrs:{id:"_4、正则表达式替换文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、正则表达式替换文本"}},[s._v("#")]),s._v(" 4、正则表达式替换文本")]),s._v(" "),a("p",[a("code",[s._v("stringObj.replace ( refexp, replacement )")])]),s._v(" "),a("h3",{attrs:{id:"let-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let-关键字"}},[s._v("#")]),s._v(" Let 关键字")]),s._v(" "),a("p",[s._v("1、let 的作用：声明变量")]),s._v(" "),a("p",[s._v("2、let 不能重复声明")]),s._v(" "),a("p",[s._v("3、let 块级作用域，变量只在代码块里有效")]),s._v(" "),a("p",[s._v("4、不存在变量提升（变量提升指的是将“定义”的代码提升到所在作用于的顶部去执行）")]),s._v(" "),a("p",[s._v("5、不影响作用域链")]),s._v(" "),a("h3",{attrs:{id:"const-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-关键字"}},[s._v("#")]),s._v(" const 关键字")]),s._v(" "),a("p",[s._v("1、一定要赋初始值")]),s._v(" "),a("p",[s._v("2、一般常量使用大写（潜规则）")]),s._v(" "),a("p",[s._v("3、常量的值不能修改")]),s._v(" "),a("p",[s._v("4、块级作用域")]),s._v(" "),a("p",[s._v("5、对于数组和对象的元素修改，不算作对常量的修改，不会报错")]),s._v(" "),a("h3",{attrs:{id:"变量的解构赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的解构赋值"}},[s._v("#")]),s._v(" 变量的解构赋值")]),s._v(" "),a("p",[s._v("es6 允许按照一定模式从数组和对象中提取值，对变量进行赋值")]),s._v(" "),a("h5",{attrs:{id:"数组的解构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的解构"}},[s._v("#")]),s._v(" 数组的解构")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  const F4 = ['1','2','3','4'];\n        let [a,b,c,d] = F4;\n        console.log(a);\n        console.log(b);\n        console.log(c);\n        console.log(d);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"对象的解构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的解构"}},[s._v("#")]),s._v(" 对象的解构")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const zhao = {\n          name: 'yan',\n          age: '17',\n          song: function(){\n            console.log('sing a song');\n          }\n      };\n      let {name,age,song} = zhao;\n      console.log(name);\n      console.log(age);\n      console.log(song);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"es6-引入新的声明字符串的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-引入新的声明字符串的方式"}},[s._v("#")]),s._v(" ES6 引入新的声明字符串的方式 ``")]),s._v(" "),a("p",[s._v("``声明在内容中可以在直接出现换行符")]),s._v(" "),a("p",[s._v("``可以进行变量的拼接")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("   \t  let love = 'woaini';\n      let out = `${love}是我爱你的意思！`;\n      console.log(out);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"es6-允许在大括号里-直接写入变量和函数-作为对象的属性和方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-允许在大括号里-直接写入变量和函数-作为对象的属性和方法"}},[s._v("#")]),s._v(" ES6 允许在大括号里，直接写入变量和函数，作为对象的属性和方法")]),s._v(" "),a("h3",{attrs:{id:"es6-的箭头函数-用作定义函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-的箭头函数-用作定义函数"}},[s._v("#")]),s._v(" ES6 的箭头函数 => 用作定义函数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" <script>\n        let fn = (a, b) => {\n            return a + b;\n        }\n        let res = fn(1, 2);\n        console.log(res);\n    <\/script>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h5",{attrs:{id:"箭头函数的-this-指向时静态的-始终指向函数声明时所在作用域下的-this-的值-call-方法调用不生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的-this-指向时静态的-始终指向函数声明时所在作用域下的-this-的值-call-方法调用不生效"}},[s._v("#")]),s._v(" 箭头函数的 this 指向时静态的，始终指向函数声明时所在作用域下的 this 的值，call 方法调用不生效")]),s._v(" "),a("h5",{attrs:{id:"箭头函数不能作为构造函数实例化对象-this-指向静态的原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数不能作为构造函数实例化对象-this-指向静态的原因"}},[s._v("#")]),s._v(" 箭头函数不能作为构造函数实例化对象（this 指向静态的原因）")]),s._v(" "),a("h5",{attrs:{id:"箭头函数不能使用-arguments-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数不能使用-arguments-变量"}},[s._v("#")]),s._v(" 箭头函数不能使用 arguments 变量")]),s._v(" "),a("h5",{attrs:{id:"箭头函数的简写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的简写"}},[s._v("#")]),s._v(" 箭头函数的简写")]),s._v(" "),a("p",[s._v("1、省略小括号，当形参有且只有一个的时候")]),s._v(" "),a("p",[s._v("2、省略花括号，当代码体只有一条语句的时候")]),s._v(" "),a("h5",{attrs:{id:"箭头函数的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的应用场景"}},[s._v("#")]),s._v(" 箭头函数的应用场景")]),s._v(" "),a("p",[s._v("箭头函数适合于 this 无关的回调，定时器，数组的方法回调；")]),s._v(" "),a("p",[s._v("不适合于 this 有关的回调，事件回调")]),s._v(" "),a("h4",{attrs:{id:"es6-允许给函数参数赋初始值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-允许给函数参数赋初始值"}},[s._v("#")]),s._v(" ES6 允许给函数参数赋初始值")]),s._v(" "),a("p",[s._v("形参可以给默认的参数，一般位置要靠后（潜规则）")]),s._v(" "),a("p",[s._v("可以与解构赋值结合（属性值和属性名同名的时候 ）")]),s._v(" "),a("h4",{attrs:{id:"rest-参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest-参数"}},[s._v("#")]),s._v(" Rest 参数")]),s._v(" "),a("h5",{attrs:{id:"用于获取函数的实参-用来代替-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用于获取函数的实参-用来代替-arguments"}},[s._v("#")]),s._v(" 用于获取函数的实参，用来代替 arguments")]),s._v(" "),a("h5",{attrs:{id:"es5-获取实参的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es5-获取实参的方式"}},[s._v("#")]),s._v(" ES5 获取实参的方式")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ta'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h5",{attrs:{id:"rest-获取实参的方式-rest-参数必须放到参数最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest-获取实参的方式-rest-参数必须放到参数最后"}},[s._v("#")]),s._v(" rest 获取实参的方式（rest 参数必须放到参数最后）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ta'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以数组的形式获得")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"拓展运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拓展运算符"}},[s._v("#")]),s._v(" ...拓展运算符")]),s._v(" "),a("h5",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),a("p",[s._v("1、数组的合并")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" yan "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ni'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ji'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ba'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" ayan "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("yan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ayan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("2、数组的克隆")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'E'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'D'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'G'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("3、将伪数组转为真正的数组")]),s._v(" "),a("h3",{attrs:{id:"symbol-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-数据类型"}},[s._v("#")]),s._v(" Symbol 数据类型")]),s._v(" "),a("p",[s._v("ES6 引入的新的原始数据类型 Symbol，表示独一无二的值")]),s._v(" "),a("p",[s._v("他是 JS 语言的第七种数据类类型")]),s._v(" "),a("h5",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),a("p",[s._v("1、Symbol 的值是唯一的，主要用于解决命名冲突")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'symbol'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'symbol'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("2、symbol 不能与其他数据进行运算")]),s._v(" "),a("h3",{attrs:{id:"迭代器-iterator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代器-iterator"}},[s._v("#")]),s._v(" 迭代器 iterator")]),s._v(" "),a("p",[s._v("迭代器是一种接口，为各种不同的数据类型，提供统一的访问机制。任何数据结构只要部署 lterator 接口，就可以完成遍历操作")]),s._v(" "),a("h5",{attrs:{id:"迭代器的应用-自定义遍历数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代器的应用-自定义遍历数据"}},[s._v("#")]),s._v(" 迭代器的应用，自定义遍历数据")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明一个对象")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" banji "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"终极一班"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        stus"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ming'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ning'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tian'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'knight'")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 索引变量")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" _this "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" _this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" _this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" done"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        index"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回结果")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("done"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历这个对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" v "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" banji"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("h3",{attrs:{id:"生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成器"}},[s._v("#")]),s._v(" 生成器")]),s._v(" "),a("p",[s._v("本质是一个函数，作用是进行异步编程")]),s._v(" "),a("h5",{attrs:{id:"回调地狱的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回调地狱的缺点"}},[s._v("#")]),s._v(" 回调地狱的缺点")]),s._v(" "),a("ul",[a("li",[s._v("回调地狱的代码耦合性太强，牵一发而动全身，难以维护")]),s._v(" "),a("li",[s._v("大量冗余的代码互相嵌套，代码的可读性变差")])]),s._v(" "),a("h5",{attrs:{id:"解决回调地狱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决回调地狱"}},[s._v("#")]),s._v(" 解决回调地狱")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("one")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("two")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("three")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("333")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("gen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("one")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("two")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("three")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("gen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\niterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("h2",{attrs:{id:"promise-异步编程的解决方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-异步编程的解决方法"}},[s._v("#")]),s._v(" Promise 异步编程的解决方法")]),s._v(" "),a("h4",{attrs:{id:"语法上-promise-是构造函数-用来封装异步操作并可以获取其成功或失败的结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法上-promise-是构造函数-用来封装异步操作并可以获取其成功或失败的结果"}},[s._v("#")]),s._v(" 语法上 Promise 是构造函数，用来封装异步操作并可以获取其成功或失败的结果")]),s._v(" "),a("ol",[a("li",[s._v("Promise 是一个构造函数\n"),a("ul",[a("li",[s._v("我们可以创建 Promise 的实例 const p = new Promise（）")]),s._v(" "),a("li",[s._v("new 出来的 Promise 实例对象，代表一个异步操作")])])]),s._v(" "),a("li",[s._v("Promise.prototype 上包含一个 .then() 方法\n"),a("ul",[a("li",[s._v("每一次 new Promise（）构造函数得到的实例对象")]),s._v(" "),a("li",[s._v("都可以通过原型链的方式访问到 .then () 方法")])])]),s._v(" "),a("li",[s._v(".then() 方法用来预先指定成功和失败的回调函数")])]),s._v(" "),a("ul",[a("li",[s._v("p.then( 成功的回调函数，失败的回调函数 )")]),s._v(" "),a("li",[s._v("p.then( result =>{ }, error => { } )")]),s._v(" "),a("li",[s._v("调用 .then() 方法时，成功的回调函数是必选的、失败的回调函数是可选的")])]),s._v(" "),a("h3",{attrs:{id:"promise-all-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-all-方法"}},[s._v("#")]),s._v(" Promise.all() 方法")]),s._v(" "),a("p",[s._v("Promise.all() 方法会发起并行的 Promise 异步操作，等所有的异步操作全部结束后才会执行下一步的 .then 操作（等待机制）")]),s._v(" "),a("p",[s._v("Promise.race() 方法会发起并行的 Promise 异步操作，只要任何一个异步操作完成，就立即执行下一步的 .then 操作（赛跑机制）")]),s._v(" "),a("h3",{attrs:{id:"async-和-await-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-和-await-关键字"}},[s._v("#")]),s._v(" async 和 await 关键字")]),s._v(" "),a("p",[s._v("​ 这是 ES8 引入的新语法，用来简化 Promise 异步操作。 在 async / await 出现之前，开发者只能通过链式 .then() 的方式处理 Promise 异步操作")]),s._v(" "),a("ul",[a("li",[s._v("如果 方法内使用到了 await 的关键字 ，function 必须要被 async 关键字修饰")]),s._v(" "),a("li",[s._v("在 async 方法中，第一个 await 之前的代码会同步执行， await 之后的代码会异步执行")])]),s._v(" "),a("h2",{attrs:{id:"eventloop-事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventloop-事件循环"}},[s._v("#")]),s._v(" EventLoop 事件循环")]),s._v(" "),a("p",[s._v("JavaScript 是一门单线程执行的编程语言，同一时间只能做一件事情")]),s._v(" "),a("p",[s._v("单线程执行任务队列的问题：")]),s._v(" "),a("p",[s._v("如果前一个任务非常耗时，则后续的任务就不能不一直等待，从而导致程序假死")]),s._v(" "),a("p",[s._v("为了防止某个耗时的任务导致程序假死的问题，JavaScript 把待执行的任务分为了两类")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("同步任务（synchronous）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("又叫做非耗时任务，指的是在主线程上排队执行的任务")])]),s._v(" "),a("li",[a("p",[s._v("只有前一个任务执行完毕，才能执行后一个任务")])])])]),s._v(" "),a("li",[a("p",[s._v("异步任务（asynchronous）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("又叫做耗时任务，异步任务有 JS 委托给宿主环境进行执行")])]),s._v(" "),a("li",[a("p",[s._v("当异步任务执行完毕之后，会通知 JS 主线程执行异步任务的回调函数")])])])])]),s._v(" "),a("h3",{attrs:{id:"同步任务和异步任务的执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步任务和异步任务的执行过程"}},[s._v("#")]),s._v(" 同步任务和异步任务的执行过程")]),s._v(" "),a("ol",[a("li",[s._v("同步任务有 JS 主线程次序执行")]),s._v(" "),a("li",[s._v("异步任务委托给宿主环境执行")]),s._v(" "),a("li",[s._v("已完成的异步任务对应的回调函数，会被加入到任务队列中等待执行")]),s._v(" "),a("li",[s._v("JS 的主线程的执行栈被清空后，会读取任务队列中的回调函数，次序执行")]),s._v(" "),a("li",[s._v("JS 主线程不断重复上面的第 4 步")])]),s._v(" "),a("h3",{attrs:{id:"宏任务和微任务-异步任务的进一步划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务-异步任务的进一步划分"}},[s._v("#")]),s._v(" 宏任务和微任务（异步任务的进一步划分）")]),s._v(" "),a("h4",{attrs:{id:"宏任务-macrotask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务-macrotask"}},[s._v("#")]),s._v(" 宏任务（macrotask）")]),s._v(" "),a("ul",[a("li",[s._v("异步 Ajax 请求 、setTimeout 、 setInterval")]),s._v(" "),a("li",[s._v("文件操作")]),s._v(" "),a("li",[s._v("其他宏任务")])]),s._v(" "),a("h4",{attrs:{id:"微任务-microtask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微任务-microtask"}},[s._v("#")]),s._v(" 微任务（microtask）")]),s._v(" "),a("ul",[a("li",[s._v("Promise.then、.catch 和 .finally")]),s._v(" "),a("li",[s._v("process.nextTick")]),s._v(" "),a("li",[s._v("其他微任务")])]),s._v(" "),a("h3",{attrs:{id:"宏任务和微任务的执行顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务的执行顺序"}},[s._v("#")]),s._v(" 宏任务和微任务的执行顺序")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211105202528575.png",alt:"image-20211105202528575"}})]),s._v(" "),a("p",[s._v("​ 每一个宏任务执行完之后，都会检查是否存在待执行的微任务")]),s._v(" "),a("p",[s._v("​ 如果有，则执行完所有微任务后，在执行下一个宏任务")]),s._v(" "),a("h2",{attrs:{id:"es6-模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块化"}},[s._v("#")]),s._v(" ES6 模块化")]),s._v(" "),a("ul",[a("li",[s._v("每个 JS 文件都是一个独立的模块")]),s._v(" "),a("li",[s._v("导入其他模块成员使用 import 关键字")]),s._v(" "),a("li",[s._v("向外共享模块成员使用 export 关键字")])]),s._v(" "),a("h4",{attrs:{id:"模块化语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化语法"}},[s._v("#")]),s._v(" 模块化语法")]),s._v(" "),a("ol",[a("li",[s._v("默认导出和默认导入\n"),a("ul",[a("li",[s._v("默认导出的语法 ： export default 默认导出的文件 （只允许导出一次）")]),s._v(" "),a("li",[s._v("默认导入的语法： import 接受名称 from '模块标识符'")])])]),s._v(" "),a("li",[s._v("按需导出和按需导入\n"),a("ul",[a("li",[s._v("按需导出的语法： export 导出的成员名称")]),s._v(" "),a("li",[s._v("按需导入的语法： import {} from '模块标识符'")])])]),s._v(" "),a("li",[s._v("直接导入并执行模块中的代码\n"),a("ul",[a("li",[s._v("import js 路径")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);